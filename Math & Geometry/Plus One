class Solution {
    public int[] plusOne(int[] digits) {
        // Iterate through the digits array from the last digit to the first
        for (int i = digits.length - 1; i >= 0; i--) {
            // If the current digit is less than 9, increment it by 1
            if (digits[i] < 9) {
                digits[i]++;
                // Return the updated array as no carry-over is needed
                return digits;
            }
            // If the current digit is 9, set it to 0 (carry-over to the next digit)
            digits[i] = 0;
        }

        // If all digits are 9 (e.g., 999 -> 1000), create a new array with an extra digit
        int[] newDigits = new int[digits.length + 1];
        // Set the first digit to 1, as carry-over results in a new leading digit
        newDigits[0] = 1;
        return newDigits;
    }
}

/*
Space Complexity:
- O(1): The algorithm modifies the input array `digits` in place for most cases. 
         In rare cases where all digits are 9, a new array of size `n+1` is created, 
         making space complexity O(n) in those cases.

Time Complexity:
- O(n): The algorithm iterates through the input array once, where `n` is the number of digits.
         In the worst case, all digits need to be processed (e.g., [9,9,9]).
*/
